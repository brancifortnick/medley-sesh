{"ast":null,"code":"var _jsxFileName = \"/home/nb/medley/medley-sesh/react-app/src/components/UploadSong/UploadSong.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createNewSong } from \"../../store/song\";\nimport { getMusiciansTracks } from \"../../store/song\";\nimport { Modal } from \"../../context/Modal\";\nimport \"./UploadSong.css\";\n\nconst UploadSong = _ref => {\n  let {\n    musicianId\n  } = _ref;\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.session.user);\n  const [showModal, setModal] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [file_url, setSong] = useState(null);\n  const [song_img, setSongImg] = useState(null);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file_url\", file_url);\n    setModal(false);\n    const res = await fetch(\"/api/songs/new-song\", {\n      method: \"POST\",\n      body: formData\n    });\n\n    if (res.ok) {\n      let file_url = await res.json();\n      dispatch(createNewSong(title, file_url, song_img, Number(musicianId)));\n    }\n\n    history.push(`/musicians/${musicianId}`);\n  };\n\n  const uploadTrack = async e => {\n    const file = e.target.files[0];\n    setSong(file);\n  };\n\n  useEffect(() => {\n    dispatch(getMusiciansTracks(parseInt(musicianId)));\n  }, [dispatch, musicianId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"song-form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"add-song-text\",\n    onClick: () => setModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Add a song\"), showModal && /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Add New Track\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Title:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Title\",\n    onChange: e => setTitle(e.target.value),\n    value: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Song\", /*#__PURE__*/React.createElement(\"input\", {\n    name: \"file_url\",\n    accept: \"audio/*\",\n    type: \"file\",\n    onChange: uploadTrack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"upload-song\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"create-song-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Upload\"))))));\n};\n\nexport default UploadSong;","map":{"version":3,"sources":["/home/nb/medley/medley-sesh/react-app/src/components/UploadSong/UploadSong.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","createNewSong","getMusiciansTracks","Modal","UploadSong","musicianId","history","dispatch","user","state","session","showModal","setModal","title","setTitle","file_url","setSong","song_img","setSongImg","onSubmit","e","preventDefault","formData","FormData","append","res","fetch","method","body","ok","json","Number","push","uploadTrack","file","target","files","parseInt","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { createNewSong } from \"../../store/song\";\nimport { getMusiciansTracks } from \"../../store/song\";\nimport { Modal } from \"../../context/Modal\";\nimport \"./UploadSong.css\";\n\nconst UploadSong = ({ musicianId }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const user = useSelector((state) => state.session.user);\n\n  const [showModal, setModal] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [file_url, setSong] = useState(null);\n  const [song_img, setSongImg] = useState(null);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file_url\", file_url);\n    setModal(false);\n    const res = await fetch(\"/api/songs/new-song\", {\n      method: \"POST\",\n      body: formData,\n    });\n    if (res.ok) {\n      let file_url = await res.json();\n      dispatch(createNewSong(title, file_url, song_img, Number(musicianId)));\n    }\n    history.push(`/musicians/${musicianId}`);\n  };\n\n  const uploadTrack = async (e) => {\n    const file = e.target.files[0];\n    setSong(file);\n  };\n\n  useEffect(() => {\n    dispatch(getMusiciansTracks(parseInt(musicianId)));\n  }, [dispatch, musicianId]);\n\n  return (\n    <div className=\"song-form-container\">\n      <button\n        id=\"add-song-text\"\n        onClick={() => setModal(true)}\n      >\n        Add a song\n      </button>\n      {showModal && (\n        <Modal onClose={() => setModal(false)}>\n          <h2>Add New Track</h2>\n          <form onSubmit={onSubmit}>\n            <div className=\"form-container\">\n              <label id=\"title\">\n                Title:\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                  onChange={(e) => setTitle(e.target.value)}\n                  value={title}\n                />\n              </label>\n              <label className=\"form-input\">\n                Song\n                <input\n                  name=\"file_url\"\n                  accept=\"audio/*\"\n                  type=\"file\"\n                  onChange={uploadTrack}\n                />\n              </label>\n              <div id=\"upload-song\">\n                <button type=\"submit\" id=\"create-song-btn\">\n                  Upload\n                </button>\n              </div>\n            </div>\n          </form>\n        </Modal>\n      )}\n    </div>\n  );\n};\nexport default UploadSong;\n"]},"metadata":{},"sourceType":"module"}