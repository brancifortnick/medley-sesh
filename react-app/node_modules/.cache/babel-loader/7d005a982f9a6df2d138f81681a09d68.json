{"ast":null,"code":"// const GET_COMMENTS = \"comment/GET_COMMENTS\";\n// const GET_SONG_COMMENTS = 'comments/GET_SONG_COMMENTS';\n// const ADD_COMMENT = \"comment/ADD_COMMENT\";\n// const GET_ONE_COMMENT = \"comment/GET_ONE_COMMENT\";\n// const DELETE_COMMENT = \"comment/DELETE_COMMENT\";\n// const EDIT_COMMENT = \"comment/EDIT_COMMENT\";\n// const getComments = (comments) => ({\n//   type: GET_COMMENTS,\n//   payload: comments,\n// });\n// const getSongComments = (comments) => ({\n//   type: GET_COMMENTS,\n//   payload: comments,\n// });\n// const getOne = (comment) => ({\n//   type: GET_ONE_COMMENT,\n//   payload: comment,\n// });\n// const postComment = (comment) => ({\n//   type: ADD_COMMENT,\n//   payload: comment,\n// });\n// const editComment = (comment) => ({\n//   type: EDIT_COMMENT,\n//   payload: comment,\n// });\n// const deleteComment = (comment) => ({\n//   type: DELETE_COMMENT,\n//   payload: comment,\n// });\n// export const getAllComments = () => async (dispatch) => {\n//   const response = await fetch(`/api/comments/`);\n//   if (response.ok) {\n//     const data = await response.json();\n//     dispatch(getComments(data.comments));\n//   }\n// };\n// export const getSongsComments = (song_id) => async (dispatch) => {\n//   const res = await fetch(`/api/songs/${song_id}/comments`)\n//   if(res.ok){\n//     const comments = await res.json();\n//     dispatch(getSongComments(comments));\n//   }\n// }\n// export const createComment = (formData) => async (dispatch) => {\n//   const res = await fetch(`/api/comments/new`, {\n//     method: \"POST\",\n//     body: formData,\n//   });\n//   if (res.ok) {\n//     console.log(\"hey before newcomment---redux\");\n//     const newComment = await res.json();\n//     console.log(newComment, \"we are in the redux store after newComment\");\n//     dispatch(postComment(newComment));\n//     console.log(newComment, \" after calling postComment\");\n//     return newComment;\n//   } else {\n//     console.log(\"Error-coming from post thunk STORE*******\");\n//   }\n// };\n// export const getOneComment = (id) => async (dispatch) => {\n//   const response = await fetch(`/api/comments/${id}`);\n//   if (response.ok) {\n//     const data = await response.json();\n//     dispatch(getOne(data));\n//   } else {\n//     console.log(\"Can't fetch comments\");\n//   }\n// };\n// export const deleteAComment = (id) => async (dispatch) => {\n//   const res = await fetch(`/api/comments/delete/${id}`, {\n//     method: \"DELETE\",\n//   });\n//   if (res.ok) {\n//     dispatch(deleteComment(id));\n//   } else {\n//     console.log(\"Musician Can't be deleted\");\n//   }\n// };\n// export const updateAComment = (formData, commentId) => async (dispatch) => {\n//   const res = await fetch(`/api/comments/update/${commentId}`, {\n//     method: \"PUT\",\n//     body: formData,\n//   });\n//   if (res.ok) {\n//     const updatedComment = await res.json();\n//     dispatch(editComment(updatedComment));\n//   } else {\n//     console.log(\"Musician Can't be edited\");\n//   }\n// };\n// const initialState = {};\n// export default function reducer(state = initialState, action) {\n//   switch (action.type) {\n//     case GET_SONG_COMMENTS:\n//       let newComState = {};\n//       action.payload.forEach((comment) => {\n//         newComState[comment.id] = comment;\n//       });\n//       return newComState;\n//     case ADD_COMMENT:\n//       const curr = { ...state };\n//       console.log(state, \"inside of reducer\");\n//       curr[action.payload.id] = action.payload;\n//       console.log(state, \"after add_comment>>>>> redux store reducer\");\n//       return curr;\n//     case GET_ONE_COMMENT:\n//       return { ...action.payload };\n//     case DELETE_COMMENT:\n//       const deleteState = { ...state };\n//       delete deleteState[action.payload];\n//       return deleteState;\n//     case EDIT_COMMENT:\n//       const editState = {...state}\n//       editState[action.payload.id] = action.payload\n//       return editState;\n//     default:\n//       return state;\n//   }\n// }","map":{"version":3,"sources":["/home/nb/medley/medley-sesh/react-app/src/store/comment.js"],"names":[],"mappingssourcesContent":["// const GET_COMMENTS = \"comment/GET_COMMENTS\";\n// const GET_SONG_COMMENTS = 'comments/GET_SONG_COMMENTS';\n// const ADD_COMMENT = \"comment/ADD_COMMENT\";\n// const GET_ONE_COMMENT = \"comment/GET_ONE_COMMENT\";\n// const DELETE_COMMENT = \"comment/DELETE_COMMENT\";\n// const EDIT_COMMENT = \"comment/EDIT_COMMENT\";\n\n// const getComments = (comments) => ({\n//   type: GET_COMMENTS,\n//   payload: comments,\n// });\n\n\n// const getSongComments = (comments) => ({\n//   type: GET_COMMENTS,\n//   payload: comments,\n// });\n\n// const getOne = (comment) => ({\n//   type: GET_ONE_COMMENT,\n//   payload: comment,\n// });\n\n// const postComment = (comment) => ({\n//   type: ADD_COMMENT,\n//   payload: comment,\n// });\n\n// const editComment = (comment) => ({\n//   type: EDIT_COMMENT,\n//   payload: comment,\n// });\n\n// const deleteComment = (comment) => ({\n//   type: DELETE_COMMENT,\n//   payload: comment,\n// });\n\n// export const getAllComments = () => async (dispatch) => {\n//   const response = await fetch(`/api/comments/`);\n//   if (response.ok) {\n//     const data = await response.json();\n//     dispatch(getComments(data.comments));\n//   }\n// };\n\n// export const getSongsComments = (song_id) => async (dispatch) => {\n//   const res = await fetch(`/api/songs/${song_id}/comments`)\n//   if(res.ok){\n//     const comments = await res.json();\n//     dispatch(getSongComments(comments));\n//   }\n// }\n\n// export const createComment = (formData) => async (dispatch) => {\n//   const res = await fetch(`/api/comments/new`, {\n//     method: \"POST\",\n//     body: formData,\n//   });\n//   if (res.ok) {\n//     console.log(\"hey before newcomment---redux\");\n//     const newComment = await res.json();\n//     console.log(newComment, \"we are in the redux store after newComment\");\n//     dispatch(postComment(newComment));\n//     console.log(newComment, \" after calling postComment\");\n//     return newComment;\n//   } else {\n//     console.log(\"Error-coming from post thunk STORE*******\");\n//   }\n// };\n\n// export const getOneComment = (id) => async (dispatch) => {\n//   const response = await fetch(`/api/comments/${id}`);\n//   if (response.ok) {\n//     const data = await response.json();\n//     dispatch(getOne(data));\n//   } else {\n//     console.log(\"Can't fetch comments\");\n//   }\n// };\n\n// export const deleteAComment = (id) => async (dispatch) => {\n//   const res = await fetch(`/api/comments/delete/${id}`, {\n//     method: \"DELETE\",\n//   });\n//   if (res.ok) {\n//     dispatch(deleteComment(id));\n//   } else {\n//     console.log(\"Musician Can't be deleted\");\n//   }\n// };\n\n// export const updateAComment = (formData, commentId) => async (dispatch) => {\n//   const res = await fetch(`/api/comments/update/${commentId}`, {\n//     method: \"PUT\",\n//     body: formData,\n//   });\n//   if (res.ok) {\n//     const updatedComment = await res.json();\n//     dispatch(editComment(updatedComment));\n//   } else {\n//     console.log(\"Musician Can't be edited\");\n//   }\n// };\n\n// const initialState = {};\n\n// export default function reducer(state = initialState, action) {\n//   switch (action.type) {\n//     case GET_SONG_COMMENTS:\n//       let newComState = {};\n//       action.payload.forEach((comment) => {\n//         newComState[comment.id] = comment;\n//       });\n//       return newComState;\n//     case ADD_COMMENT:\n//       const curr = { ...state };\n//       console.log(state, \"inside of reducer\");\n//       curr[action.payload.id] = action.payload;\n//       console.log(state, \"after add_comment>>>>> redux store reducer\");\n//       return curr;\n//     case GET_ONE_COMMENT:\n//       return { ...action.payload };\n//     case DELETE_COMMENT:\n//       const deleteState = { ...state };\n//       delete deleteState[action.payload];\n//       return deleteState;\n//     case EDIT_COMMENT:\n//       const editState = {...state}\n//       editState[action.payload.id] = action.payload\n//       return editState;\n//     default:\n//       return state;\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}